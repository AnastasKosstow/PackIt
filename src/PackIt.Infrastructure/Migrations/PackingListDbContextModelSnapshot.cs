// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PackIt.Infrastructure.PackingList.EF;

#nullable disable

namespace PackIt.Infrastructure.Migrations
{
    [DbContext(typeof(PackingListDbContext))]
    partial class PackingListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("packing")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PackIt.Domain.Entities.PackingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PackingLists", "packing");
                });

            modelBuilder.Entity("PackIt.Domain.Entities.PackingList", b =>
                {
                    b.OwnsOne("PackIt.Domain.ValueObjects.Localization", "Localization", b1 =>
                        {
                            b1.Property<Guid>("PackingListId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Country");

                            b1.HasKey("PackingListId");

                            b1.ToTable("PackingLists", "packing");

                            b1.WithOwner()
                                .HasForeignKey("PackingListId");
                        });

                    b.OwnsMany("PackIt.Domain.ValueObjects.PackingItem", "Items", b1 =>
                        {
                            b1.Property<Guid>("PackingListId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("IsPacked")
                                .HasColumnType("boolean");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<int>("Quantity")
                                .HasColumnType("integer");

                            b1.HasKey("PackingListId", "Id");

                            b1.ToTable("PackingItem", "packing");

                            b1.WithOwner()
                                .HasForeignKey("PackingListId");
                        });

                    b.OwnsOne("PackIt.Domain.ValueObjects.PackingListName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PackingListId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Name");

                            b1.HasKey("PackingListId");

                            b1.ToTable("PackingLists", "packing");

                            b1.WithOwner()
                                .HasForeignKey("PackingListId");
                        });

                    b.OwnsOne("PackIt.Domain.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<Guid>("PackingListId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Value")
                                .HasColumnType("double precision")
                                .HasColumnName("Temperature");

                            b1.HasKey("PackingListId");

                            b1.ToTable("PackingLists", "packing");

                            b1.WithOwner()
                                .HasForeignKey("PackingListId");
                        });

                    b.Navigation("Items");

                    b.Navigation("Localization");

                    b.Navigation("Name");

                    b.Navigation("Temperature");
                });
#pragma warning restore 612, 618
        }
    }
}
